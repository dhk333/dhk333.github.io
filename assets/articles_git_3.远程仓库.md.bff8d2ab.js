import{_ as a,c as e,o as i,a as t}from"./app.2614b7c5.js";const u=JSON.parse('{"title":"远程仓库","description":"","frontmatter":{},"headers":[{"level":2,"title":"添加远程仓库","slug":"添加远程仓库","link":"#添加远程仓库","children":[{"level":3,"title":"gitee","slug":"gitee","link":"#gitee","children":[]}]},{"level":2,"title":"删除远程仓库","slug":"删除远程仓库","link":"#删除远程仓库","children":[]},{"level":2,"title":"从远程库克隆","slug":"从远程库克隆","link":"#从远程库克隆","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"relativePath":"articles/git/3.远程仓库.md","lastUpdated":1677834160000}'),s={name:"articles/git/3.远程仓库.md"},n=t(`<h1 id="远程仓库" tabindex="-1">远程仓库 <a class="header-anchor" href="#远程仓库" aria-hidden="true">#</a></h1><h2 id="添加远程仓库" tabindex="-1">添加远程仓库 <a class="header-anchor" href="#添加远程仓库" aria-hidden="true">#</a></h2><h3 id="gitee" tabindex="-1">gitee <a class="header-anchor" href="#gitee" aria-hidden="true">#</a></h3><p>首先登录，登录后点击新建仓库： <img src="https://cdn.nlark.com/yuque/0/2023/png/32665636/1677553422178-5878bc02-ae21-44ba-8dbb-24306284c27c.png#averageHue=%23f8f9eb&amp;clientId=ufd20c8fc-48e0-4&amp;from=paste&amp;height=259&amp;id=u05d45f9b&amp;name=image.png&amp;originHeight=259&amp;originWidth=342&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=19637&amp;status=done&amp;style=none&amp;taskId=u70b51dae-745f-4579-9ea1-00d3ebae620&amp;title=&amp;width=342" alt="image.png"> 输入相关仓库信息，然后点击创建： <img src="https://cdn.nlark.com/yuque/0/2023/png/32665636/1677553586604-8f6da4e0-a451-4b46-a34f-c161510a2013.png#averageHue=%23fdfcfb&amp;clientId=ufd20c8fc-48e0-4&amp;from=paste&amp;height=669&amp;id=ub208b682&amp;name=image.png&amp;originHeight=669&amp;originWidth=800&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=47421&amp;status=done&amp;style=none&amp;taskId=u7d323803-1f80-46ce-9a3d-6d6dd2a2090&amp;title=&amp;width=800" alt="image.png"> 现在可以看到Git全局设置，第一次安装Git后可使用命令设置用户名及邮箱： <img src="https://cdn.nlark.com/yuque/0/2023/png/32665636/1677553810328-23d5834f-946b-4cbb-a405-7c2c9cd70029.png#averageHue=%23b2b2b1&amp;clientId=ufd20c8fc-48e0-4&amp;from=paste&amp;height=145&amp;id=u8b59c90b&amp;name=image.png&amp;originHeight=145&amp;originWidth=456&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=8197&amp;status=done&amp;style=none&amp;taskId=ucdac21ae-1107-4860-bfa0-9e3b2344265&amp;title=&amp;width=456" alt="image.png"> 如果还未创建本地仓库，可按以下命令创建本地仓库： <img src="https://cdn.nlark.com/yuque/0/2023/png/32665636/1677553854951-2468f47d-67ce-4d10-baa5-0fd0d57ae88f.png#averageHue=%23565655&amp;clientId=ufd20c8fc-48e0-4&amp;from=paste&amp;height=207&amp;id=ucbf54fcd&amp;name=image.png&amp;originHeight=207&amp;originWidth=548&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=11579&amp;status=done&amp;style=none&amp;taskId=u00681798-3b7c-423e-9f31-696c5349705&amp;title=&amp;width=548" alt="image.png"> 如果已有仓库按照以下命令将本地仓库推送到远程仓库： <img src="https://cdn.nlark.com/yuque/0/2023/png/32665636/1677553890558-4368f556-1805-4467-b2ef-94c35167e3a5.png#averageHue=%237b7b7a&amp;clientId=ufd20c8fc-48e0-4&amp;from=paste&amp;height=117&amp;id=u268e9108&amp;name=image.png&amp;originHeight=117&amp;originWidth=575&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=6285&amp;status=done&amp;style=none&amp;taskId=u6aee2379-5204-4b09-abf5-41608873ea1&amp;title=&amp;width=575" alt="image.png"> 把本地库的内容推送到远程，用<code>git push</code>命令，实际上是把当前分支<code>master</code>推送到远程。 由于远程库是空的，我们第一次推送<code>master</code>分支时，加上了<code>-u</code>参数，Git不但会把本地的<code>master</code>分支内容推送的远程新的<code>master</code>分支，还会把本地的<code>master</code>分支和远程的<code>master</code>分支关联起来，在以后的推送或者拉取时就可以简化命令。</p><h2 id="删除远程仓库" tabindex="-1">删除远程仓库 <a class="header-anchor" href="#删除远程仓库" aria-hidden="true">#</a></h2><p>如果添加的时候地址写错了，或者就是想删除远程库，可以用<code>git remote rm &lt;name&gt;</code>命令。使用前，建议先用<code>git remote -v</code>查看远程库信息：</p><div class="language-git"><button title="Copy Code" class="copy"></button><span class="lang">git</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">$ git remote -v</span></span>
<span class="line"><span style="color:#A6ACCD;">origin  git@github.com:michaelliao/learn-git.git (fetch)</span></span>
<span class="line"><span style="color:#A6ACCD;">origin  git@github.com:michaelliao/learn-git.git (push)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>然后，根据名字删除，比如删除<code>origin</code>：</p><div class="language-git"><button title="Copy Code" class="copy"></button><span class="lang">git</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">$ git remote rm origin</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>此处的“删除”其实是解除了本地和远程的绑定关系，并不是物理上删除了远程库。远程库本身并没有任何改动。要真正删除远程库，需要登录到Gitee，在后台页面找到删除按钮再删除。</p><h2 id="从远程库克隆" tabindex="-1">从远程库克隆 <a class="header-anchor" href="#从远程库克隆" aria-hidden="true">#</a></h2><p>假设我们从零开发，那么最好的方式是先创建远程库，然后，从远程库克隆。<br> 首先，登陆GitHub，创建一个新的仓库，名字叫<code>gitskills</code>：<br> 现在，远程库已经准备好了，下一步是用命令<code>git clone</code>克隆一个本地库：</p><div class="language-git"><button title="Copy Code" class="copy"></button><span class="lang">git</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">$ git clone git@github.com:michaelliao/gitskills.git</span></span>
<span class="line"><span style="color:#A6ACCD;">Cloning into &#39;gitskills&#39;...</span></span>
<span class="line"><span style="color:#A6ACCD;">remote: Counting objects: 3, done.</span></span>
<span class="line"><span style="color:#A6ACCD;">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 3</span></span>
<span class="line"><span style="color:#A6ACCD;">Receiving objects: 100% (3/3), done.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>注意把Git库的地址换成你自己的，然后进入<code>gitskills</code>目录看看，已经有<code>README.md</code>文件了：</p><div class="language-git"><button title="Copy Code" class="copy"></button><span class="lang">git</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">$ cd gitskills</span></span>
<span class="line"><span style="color:#A6ACCD;">$ ls</span></span>
<span class="line"><span style="color:#A6ACCD;">README.md</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>如果有多个人协作开发，那么每个人各自从远程克隆一份就可以了。</p><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-hidden="true">#</a></h2><ol><li>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>；</li><li>关联一个远程库时必须给远程库指定一个名字，<code>origin</code>是默认习惯命名；</li><li>关联后，使用命令<code>git push -u origin master</code>第一次推送<code>master</code>分支的所有内容；</li><li>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改；</li><li>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！</li><li>要克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</li><li>Git支持多种协议，包括<code>https</code>，但<code>ssh</code>协议速度最快。</li></ol>`,18),p=[n];function l(o,c,d,r,m,g){return i(),e("div",null,p)}const b=a(s,[["render",l]]);export{u as __pageData,b as default};
