import{_ as s,c as a,o as n,a as l}from"./app.2614b7c5.js";const A=JSON.parse('{"title":"页面导航","description":"","frontmatter":{},"headers":[{"level":2,"title":"声明式导航","slug":"声明式导航","link":"#声明式导航","children":[]},{"level":2,"title":"编程式导航","slug":"编程式导航","link":"#编程式导航","children":[]},{"level":2,"title":"导航传参","slug":"导航传参","link":"#导航传参","children":[]},{"level":2,"title":"下拉刷新","slug":"下拉刷新","link":"#下拉刷新","children":[{"level":3,"title":"全局开启下拉刷新","slug":"全局开启下拉刷新","link":"#全局开启下拉刷新","children":[]},{"level":3,"title":"局部开启下拉刷新","slug":"局部开启下拉刷新","link":"#局部开启下拉刷新","children":[]},{"level":3,"title":"配置下拉刷新窗口的样式","slug":"配置下拉刷新窗口的样式","link":"#配置下拉刷新窗口的样式","children":[]},{"level":3,"title":"停止下拉刷新的效果","slug":"停止下拉刷新的效果","link":"#停止下拉刷新的效果","children":[]}]},{"level":2,"title":"上拉触底","slug":"上拉触底","link":"#上拉触底","children":[{"level":3,"title":"什么是上拉触底？","slug":"什么是上拉触底","link":"#什么是上拉触底","children":[]},{"level":3,"title":"配置上拉触底距离","slug":"配置上拉触底距离","link":"#配置上拉触底距离","children":[]},{"level":3,"title":"配置节流阀","slug":"配置节流阀","link":"#配置节流阀","children":[]},{"level":3,"title":"什么是生命周期？","slug":"什么是生命周期","link":"#什么是生命周期","children":[]},{"level":3,"title":"生命周期的分类","slug":"生命周期的分类","link":"#生命周期的分类","children":[]},{"level":3,"title":"什么是生命周期函数？","slug":"什么是生命周期函数","link":"#什么是生命周期函数","children":[]},{"level":3,"title":"生命周期函数的分类","slug":"生命周期函数的分类","link":"#生命周期函数的分类","children":[]}]},{"level":2,"title":"什么是wxs？","slug":"什么是wxs","link":"#什么是wxs","children":[]},{"level":2,"title":"wxs 和 JavaScript 的关系","slug":"wxs-和-javascript-的关系","link":"#wxs-和-javascript-的关系","children":[]},{"level":2,"title":"内嵌 wxs 脚本","slug":"内嵌-wxs-脚本","link":"#内嵌-wxs-脚本","children":[]},{"level":2,"title":"外联的 wxs 脚本","slug":"外联的-wxs-脚本","link":"#外联的-wxs-脚本","children":[{"level":3,"title":"定义外联wxs脚本","slug":"定义外联wxs脚本","link":"#定义外联wxs脚本","children":[]},{"level":3,"title":"使用外联的 wxs 脚本","slug":"使用外联的-wxs-脚本","link":"#使用外联的-wxs-脚本","children":[]}]},{"level":2,"title":"wxs的特点","slug":"wxs的特点","link":"#wxs的特点","children":[{"level":3,"title":"与js的不同点","slug":"与js的不同点","link":"#与js的不同点","children":[]},{"level":3,"title":"不能作为组件的事件回调","slug":"不能作为组件的事件回调","link":"#不能作为组件的事件回调","children":[]},{"level":3,"title":"隔离性","slug":"隔离性","link":"#隔离性","children":[]},{"level":3,"title":"性能好","slug":"性能好","link":"#性能好","children":[]}]}],"relativePath":"articles/wechat/3、视图与逻辑.md","lastUpdated":1678786121000}'),p={name:"articles/wechat/3、视图与逻辑.md"},o=l(`<h1 id="页面导航" tabindex="-1">页面导航 <a class="header-anchor" href="#页面导航" aria-hidden="true">#</a></h1><h2 id="声明式导航" tabindex="-1">声明式导航 <a class="header-anchor" href="#声明式导航" aria-hidden="true">#</a></h2><blockquote><p>1、在页面上在页面上声明一个 <code>&lt;navigator&gt;</code> 导航组件 2、通过点击 <code>&lt;navigator&gt;</code> 组件实现页面跳转</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	跳转到指定的navbar页面</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	url：跳转页面路径，必须以 / 开头</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	open-type：跳转的方式，必须为 switchTab</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">--&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">navigator</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">url</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/page/message/message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">open-type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">switchTab</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">navigator</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	跳转到navbar页面</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	url：跳转页面路径，必须以 / 开头</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	open-type：跳转的方式，必须为 switchTab</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">--&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">navigator</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">url</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/page/message/message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">open-type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">navigate</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">navigator</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	后退页面</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	open-type：跳转的方式，必须为 switchTab</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	delta：后退的层级，必须为数字</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">--&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">navigator</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">open-type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">navigateBack</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">delta</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">navigator</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="编程式导航" tabindex="-1">编程式导航 <a class="header-anchor" href="#编程式导航" aria-hidden="true">#</a></h2><blockquote><p>调用小程序的导航 API，实现页面的跳转</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 跳转navbar页面，并关闭其他所有非 tabBar 页面</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"> wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">switchTab</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 页面路径，路径后面不能带参数</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 成功回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">success</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 失败回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">fail</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 无论成功还是失败都会执行的回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">complete</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 保留当前页面，跳转到应用内的某个页面</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"> wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateTo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 页面路径，路径后面不能带参数</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 成功回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">success</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 失败回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">fail</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 无论成功还是失败都会执行的回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">complete</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 后退导航</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"> wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateBack</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 返回的页面数，如果 delta 大于现有页面数，则返回到首页</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">delta</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 成功回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">success</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 失败回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">fail</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 无论成功还是失败都会执行的回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">complete</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 导航传参</span></span>
<span class="line"><span style="color:#A6ACCD;"> wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateTo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 页面路径，路径后面不能带参数</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/page/message/name=zhangsan&amp;age=14</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 成功回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">success</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 失败回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">fail</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 无论成功还是失败都会执行的回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">complete</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="导航传参" tabindex="-1">导航传参 <a class="header-anchor" href="#导航传参" aria-hidden="true">#</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 导航传参 声明式导航</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">navigator</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">url</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/page/message/name=zhangsan&amp;age=14</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">navigator</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 导航传参 编程式导航</span></span>
<span class="line"><span style="color:#A6ACCD;"> wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateTo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 页面路径，路径后面不能带参数</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/page/message/name=zhangsan&amp;age=14</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 成功回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">success</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 失败回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">fail</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 无论成功还是失败都会执行的回调</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">complete</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 通过声明式导航和编程式导航所携带的参数，可以直接在onLoad事件中直接获取到</span></span>
<span class="line"><span style="color:#82AAFF;">onLoad</span><span style="color:#A6ACCD;">(options)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// options 就是参数对象</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">options</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h1 id="页面事件" tabindex="-1">页面事件 <a class="header-anchor" href="#页面事件" aria-hidden="true">#</a></h1><h2 id="下拉刷新" tabindex="-1">下拉刷新 <a class="header-anchor" href="#下拉刷新" aria-hidden="true">#</a></h2><blockquote><p>启用下拉刷新的方式有两种：</p></blockquote><h3 id="全局开启下拉刷新" tabindex="-1">全局开启下拉刷新 <a class="header-anchor" href="#全局开启下拉刷新" aria-hidden="true">#</a></h3><blockquote><p>在 app.json 的 window 节点中，将 enablePullDownRefresh 设置为 true</p></blockquote><h3 id="局部开启下拉刷新" tabindex="-1">局部开启下拉刷新 <a class="header-anchor" href="#局部开启下拉刷新" aria-hidden="true">#</a></h3><blockquote><p>在页面的 .json 配置文件中，将 enablePullDownRefresh 设置为 true</p><p>在实际开发中，推荐使用第 2 种方式，为需要的页面单独开启下拉刷新的效果</p><p>onPullDownRefresh() 方法可监听用户下拉动作 wx.stopPullDownRefresh() 方法可停止页面刷新</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 在页面的js文件中，自动生成了下拉刷新函数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 页面相关事件处理函数--监听用户下拉动作</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#82AAFF;">onPullDownRefresh</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// 可在这个地方发起网络请求</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 关闭页面刷新</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stopPullDownRefresh</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="配置下拉刷新窗口的样式" tabindex="-1">配置下拉刷新窗口的样式 <a class="header-anchor" href="#配置下拉刷新窗口的样式" aria-hidden="true">#</a></h3><p>在全局或页面的 <code>.json</code> 配置文件中，通过 <code>backgroundColor</code> 和 <code>backgroundTextStyle </code>来配置下拉刷新窗口的样式，其中： <code>backgroundColor</code> 用来配置下拉刷新窗口的背景颜色，仅支持16 进制的颜色值 <code>backgroundTextStyle</code> 用来配置下拉刷新 <code>loading</code> 的样式，仅支持 <code>dark</code> 和 <code>light</code></p><h3 id="停止下拉刷新的效果" tabindex="-1">停止下拉刷新的效果 <a class="header-anchor" href="#停止下拉刷新的效果" aria-hidden="true">#</a></h3><p>当处理完下拉刷新后，下拉刷新的 <code>loading</code> 效果会一直显示，不会主动消失，所以需要手动隐藏下拉刷新的 <code>loading</code> 效果。此时，调用 <code>wx.stopPullDownRefresh()</code> 可以停止当前页面的下拉刷新。示例代码如下： <img src="https://cdn.nlark.com/yuque/0/2023/png/32665636/1678707036967-5347c4ae-38fa-47e7-ab9a-20959dece527.png#averageHue=%230d1122&amp;clientId=u258184b4-afa9-4&amp;from=paste&amp;height=333&amp;id=u841a82e9&amp;name=image.png&amp;originHeight=434&amp;originWidth=818&amp;originalType=binary&amp;ratio=1.3020833730697632&amp;rotation=0&amp;showTitle=false&amp;size=81744&amp;status=done&amp;style=none&amp;taskId=ueb3c431f-3f90-4b27-8ce5-4a6743bec50&amp;title=&amp;width=628.2239808281256" alt="image.png"></p><h2 id="上拉触底" tabindex="-1">上拉触底 <a class="header-anchor" href="#上拉触底" aria-hidden="true">#</a></h2><h3 id="什么是上拉触底" tabindex="-1">什么是上拉触底？ <a class="header-anchor" href="#什么是上拉触底" aria-hidden="true">#</a></h3><blockquote><p>上拉触底是移动端的专有名词，通过手指在屏幕上的上拉滑动操作，从而加载更多数据的行为。 onReachBottom（）方法可监听用户上拉触底动作。</p></blockquote><h3 id="配置上拉触底距离" tabindex="-1">配置上拉触底距离 <a class="header-anchor" href="#配置上拉触底距离" aria-hidden="true">#</a></h3><blockquote><p>默认距离是50px，可在页面的json文件中，通过onReachBottomDistance配置上拉触底的距离。</p></blockquote><h3 id="配置节流阀" tabindex="-1">配置节流阀 <a class="header-anchor" href="#配置节流阀" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 页面上拉触底事件的处理函数</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 配置节流阀 作用：发完上一个请求时，才可以发送下一个请求，预防上一个请求还没有发完时就发下一个请求</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 在data节点定义isLoading变量，用来声明节流阀的状态</span></span>
<span class="line"><span style="color:#FFCB6B;">data</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">isLoading</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">false</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 默认为false</span></span>
<span class="line"><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#82AAFF;">onReachBottom</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1、开启节流阀</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">setData</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  isLoading</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2、发起网络请求</span></span>
<span class="line"><span style="color:#A6ACCD;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">request</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  method</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">GET</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 成功回调</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">success</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 无论成功还是失败都会触发</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">complete</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 3、关闭节流阀</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">setData</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      isLoading</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h1 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-hidden="true">#</a></h1><h3 id="什么是生命周期" tabindex="-1">什么是生命周期？ <a class="header-anchor" href="#什么是生命周期" aria-hidden="true">#</a></h3><blockquote><p>生命周期（Life Cycle）是指一个对象从创建 -&gt; 运行 -&gt; 销毁的整个阶段，强调的是一个时间段。例如： 张三出生，表示这个人生命周期的开始 张三离世，表示这个人生命周期的结束 中间张三的一生，就是张三的生命周期</p><p>我们可以把每个小程序运行的过程，也概括为生命周期： 小程序的启动，表示生命周期的开始 小程序的关闭，表示生命周期的结束 中间小程序运行的过程，就是小程序的生命周期</p></blockquote><h3 id="生命周期的分类" tabindex="-1">生命周期的分类 <a class="header-anchor" href="#生命周期的分类" aria-hidden="true">#</a></h3><h4 id="应用的生命周期" tabindex="-1">应用的生命周期 <a class="header-anchor" href="#应用的生命周期" aria-hidden="true">#</a></h4><blockquote><p>小程序从启动 -》运行 -》销毁的过程</p></blockquote><h4 id="页面的生命周期" tabindex="-1">页面的生命周期 <a class="header-anchor" href="#页面的生命周期" aria-hidden="true">#</a></h4><blockquote><p>页面从加载 -》 渲染 -》销毁的过程</p><p>其中，页面的生命周期范围较小，应用程序的生命周期范围较大，如图所示: <img src="https://cdn.nlark.com/yuque/0/2022/png/32665636/1665123147072-a605891c-ced7-4a7c-bc2f-dcf93bb3e04b.png#averageHue=%23f7eeee&amp;clientId=uce25cac5-25cd-4&amp;from=paste&amp;height=123&amp;id=ubeeddfa5&amp;name=image.png&amp;originHeight=160&amp;originWidth=1115&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=30443&amp;status=done&amp;style=none&amp;taskId=uce5e0d44-060b-43fb-8ca9-4b23765e7aa&amp;title=&amp;width=856.3199738671883" alt="image.png"></p></blockquote><h3 id="什么是生命周期函数" tabindex="-1">什么是生命周期函数？ <a class="header-anchor" href="#什么是生命周期函数" aria-hidden="true">#</a></h3><blockquote><p>生命周期函数：是由小程序框架提供的内置函数，会伴随着生命周期，自动按次序执行。 生命周期函数的作用：允许程序员在特定的时间点，执行某些特定的操作。例如，页面刚加载的时候，可以在 onLoad 生命周期函数中初始化页面的数据。 注意：生命周期强调的是时间段，生命周期函数强调的是时间点。</p></blockquote><h3 id="生命周期函数的分类" tabindex="-1">生命周期函数的分类 <a class="header-anchor" href="#生命周期函数的分类" aria-hidden="true">#</a></h3><h4 id="应用的生命周期函数" tabindex="-1">应用的生命周期函数 <a class="header-anchor" href="#应用的生命周期函数" aria-hidden="true">#</a></h4><blockquote><p>小程序从启动 -》运行 -》销毁期间依次调用的那些函数</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// app.js</span></span>
<span class="line"><span style="color:#82AAFF;">App</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 小程序初始化完成时，执行此函数，全局只触发一次，可以做一些初始化的工作</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">onLaunuch</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">){},</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 小程序启动，或从后台进入前台显示时触发</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">onShow</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">){},</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 小程序从前台进入后台时触发</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">onHide</span><span style="color:#89DDFF;">(){},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h4 id="页面的生命周期函数" tabindex="-1">页面的生命周期函数 <a class="header-anchor" href="#页面的生命周期函数" aria-hidden="true">#</a></h4><blockquote><p>页面从加载 -》 渲染 -》销毁期间依次调用的那些函数</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 页面.js</span></span>
<span class="line"><span style="color:#82AAFF;">Page</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">onLoad</span><span style="color:#89DDFF;">(){},</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 监听页面加载，一个页面触发一次</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">onShow</span><span style="color:#89DDFF;">(){},</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 监听页面显示</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">onReady</span><span style="color:#89DDFF;">(){},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 监听页面初次渲染完成，一个页面调用一次</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">onHide</span><span style="color:#89DDFF;">(){},</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 监听页面隐藏</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">onUnload</span><span style="color:#89DDFF;">(){}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 监听页面卸载，一个页面调用一次</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h1 id="wxs脚本" tabindex="-1">wxs脚本 <a class="header-anchor" href="#wxs脚本" aria-hidden="true">#</a></h1><h2 id="什么是wxs" tabindex="-1">什么是wxs？ <a class="header-anchor" href="#什么是wxs" aria-hidden="true">#</a></h2><blockquote><p>WXS（WeiXin Script）是小程序独有的一套脚本语言，结合 WXML，可以构建出页面的结构。 wxs的应用场景 wxml 中无法调用在页面的 .js 中定义的函数，但是，wxml 中可以调用 wxs 中定义的函数。因此，小程序中 wxs 的典型应用场景就是“过滤器”。</p></blockquote><h2 id="wxs-和-javascript-的关系" tabindex="-1">wxs 和 JavaScript 的关系 <a class="header-anchor" href="#wxs-和-javascript-的关系" aria-hidden="true">#</a></h2><blockquote><p>虽然 wxs 的语法类似于 JavaScript，但是 wxs 和 JavaScript 是完全不同的两种语言： ① wxs 有自己的数据类型 number 数值类型、string 字符串类型、boolean 布尔类型、object 对象类型、 function 函数类型、array 数组类型、 date 日期类型、 regexp 正则 ② wxs 不支持类似于 ES6 及以上的语法形式 不支持：let、const、解构赋值、展开运算符、箭头函数、对象属性简写、etc... 支持：var 定义变量、普通 function 函数等类似于 ES5 的语法 ③ wxs 遵循 CommonJS 规范 module 对象 require() 函数 module.exports 对象</p></blockquote><h2 id="内嵌-wxs-脚本" tabindex="-1">内嵌 wxs 脚本 <a class="header-anchor" href="#内嵌-wxs-脚本" aria-hidden="true">#</a></h2><blockquote><p>wxs 代码可以编写在 wxml 文件中的 <code>&lt;wxs&gt;</code> 标签内，就像 Javascript 代码可以编写在 html 文件中的 <code>&lt;script&gt;</code> 标签内一样。 wxml 文件中的每个 <code>&lt;wxs&gt;&lt;/wxs&gt;</code> 标签，必须提供 module 属性，用来指定当前 wxs 的模块名称，方便在 wxml 中访问模块中的成员：</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{ m1.toUpper(username) }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">wxs</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">module</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">m1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  // 向外导出</span></span>
<span class="line"><span style="color:#A6ACCD;">  module.exports.toUpper = function(str){</span></span>
<span class="line"><span style="color:#A6ACCD;">    return str.toUpperCase();</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">wxs</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="外联的-wxs-脚本" tabindex="-1">外联的 wxs 脚本 <a class="header-anchor" href="#外联的-wxs-脚本" aria-hidden="true">#</a></h2><h3 id="定义外联wxs脚本" tabindex="-1">定义外联wxs脚本 <a class="header-anchor" href="#定义外联wxs脚本" aria-hidden="true">#</a></h3><blockquote><p>wxs 代码还可以编写在以 .wxs 为后缀名的文件内，就像 javascript 代码可以编写在以 .js 为后缀名的文件中 一样。示例代码如下：</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">toUpper</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toUpperCase</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">toUpper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> toUpper</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="使用外联的-wxs-脚本" tabindex="-1">使用外联的 wxs 脚本 <a class="header-anchor" href="#使用外联的-wxs-脚本" aria-hidden="true">#</a></h3><blockquote><p>在 wxml 中引入外联的 wxs 脚本时，必须为 <code>&lt;wxs&gt;</code> 标签添加 module 和 src 属性，其中： module 用来指定模块的名称 src 用来指定要引入的脚本的路径，且必须是相对路径 示例代码如下：</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{ m.toUpper(username) }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 引用外联的 tools.wxs 脚本,并命名为m2 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">wxs</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../../utils/tools.wxs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">module</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">m2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">wxs</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="wxs的特点" tabindex="-1">wxs的特点 <a class="header-anchor" href="#wxs的特点" aria-hidden="true">#</a></h2><h3 id="与js的不同点" tabindex="-1">与js的不同点 <a class="header-anchor" href="#与js的不同点" aria-hidden="true">#</a></h3><blockquote><p>为了降低 wxs（WeiXin Script）的学习成本， wxs 语言在设计时借大量鉴了 JavaScript 的语法。但是本质上， wxs 和 JavaScript 是完全不同的两种语言！</p></blockquote><h3 id="不能作为组件的事件回调" tabindex="-1">不能作为组件的事件回调 <a class="header-anchor" href="#不能作为组件的事件回调" aria-hidden="true">#</a></h3><blockquote><p>wxs 典型的应用场景就是“过滤器”，经常配合 Mustache 语法进行使用，例如：</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{ m1.toUpper(username) }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><blockquote><p>但是，在 wxs 中定义的函数不能作为组件的事件回调函数。例如，下面的用法是错误的：</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">bindtap</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">m1.toUpper</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">按钮</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="隔离性" tabindex="-1">隔离性 <a class="header-anchor" href="#隔离性" aria-hidden="true">#</a></h3><blockquote><p>隔离性指的是 wxs 的运行环境和其他 JavaScript 代码是隔离的。体现在如下两方面： ① wxs 不能调用 js 中定义的函数 ② wxs 不能调用小程序提供的 API</p></blockquote><h3 id="性能好" tabindex="-1">性能好 <a class="header-anchor" href="#性能好" aria-hidden="true">#</a></h3><blockquote><p>在 iOS 设备上，小程序内的 WXS 会比 JavaScript 代码快 2 ~ 20 倍 在 android 设备上，二者的运行效率无差异</p></blockquote>`,72),e=[o];function t(c,r,i,y,D,F){return n(),a("div",null,e)}const C=s(p,[["render",t]]);export{A as __pageData,C as default};
